{
	// string that indicate the activation function used for continuous actions
	// "activationFunction" : 'none', // Default value
	"activationFunction" : "tanh",
	// Number of recordings held in the Archive.
	// "archiveSize" : 50, // Default value
	"archiveSize" : 50,
	// Probability of archiving the result of each Program execution.
	// "archivingProbability" : 0.05, // Default value
	"archivingProbability" : 0.0005,
	// Boolean used to activate an evaluation of the surviving roots in validation
	// mode after the training at each generation.
	// "doValidation" : false, // Default value
	"doValidation" : true,
	// Boolean indicating if the action programs changed the shared memory.
	// "isActionSharedMem" : false, // Default value
	"isActionSharedMem" : false,
	// Boolean indicating if the memory is fully shared or only written by the winning bid.
	// "isFullSharedMemory" : false, // Default value
	"isFullSharedMemory" : false,
	// Maximum number of actions performed on the learning environment during the
	// each evaluation of a root.
	// "maxNbActionsPerEval" : 1000, // Default value
	"maxNbActionsPerEval" : 1000,
	// Maximum number of times a given root is evaluated.After this number is
	// reached, possibly after several generations, the score of the root will be
	// fixed, and no further evaluation will be done.
	// "maxNbEvaluationPerPolicy" : 1000, // Default value
	"maxNbEvaluationPerPolicy" : 20,
	"mutation" :
	{
			"actProg" :
			{
					// Number of Line within the Program of the TPG at the initialisation.
					// "initProgramSize" : 10, // Default value
					"initProgramSize" : 100,
					// Maximum constant value possible.
					// "maxConstValue" : 1, // Default value
					"maxConstValue" : 1.0,
					// Maximum number of Line within the Program of the TPG.
					// "maxProgramSize" : 96, // Default value
					"maxProgramSize" : 10000,
					// Maximum constant value possible.
					// "maxRegsValue" : 1, // Default value
					"maxRegsValue" : 0.0,
					// Minimum constant value possible.
					// "minConstValue" : -1, // Default value
					"minConstValue" : -1.0,
					// Minimum register value possible.
					// "minRegsValue" : -1, // Default value
					"minRegsValue" : 0.0,
					// Probability of inserting a line in the Program.
					// "pAdd" : 0.5, // Default value
					"pAdd" : 0.9,
					// Probability of each constant to be mutated.
					// Mutation is to multiply by a random number between 0.5 and 2
					// There is also 0.1 probability of multiply by -1.
					// "pConstantMutation" : 0.5, // Default value
					"pConstantMutation" : 0.5,
					// Probability of deleting a line of the Program.
					// "pDelete" : 0.5, // Default value
					"pDelete" : 0.5,
					// Probability of altering a line of the Program.
					// "pMutate" : 1.0, // Default value
					"pMutate" : 1.0,
					// Probability of creating a new program.
					// "pNewProgram" : 0.0, // Default value
					"pNewProgram" : 0.0,
					// Probability of each init register value to be mutated.
					// Mutation is to multiply by a random number between 0.5 and 2
					// There is also 0.1 probability of multiply by -1.
					// "pRegsValueMutation" : 0.5, // Default value
					"pRegsValueMutation" : 0.0,
					// Probability of swapping two lines of the Program.
					// "pSwap" : 1.0, // Default value
					"pSwap" : 1.0
			},
			"contProg" :
			{
					// Number of Line within the Program of the TPG at the initialisation.
					// "initProgramSize" : 10, // Default value
					"initProgramSize" : 100,
					// Maximum constant value possible.
					// "maxConstValue" : 1, // Default value
					"maxConstValue" : 1.0,
					// Maximum number of Line within the Program of the TPG.
					// "maxProgramSize" : 96, // Default value
					"maxProgramSize" : 10000,
					// Maximum constant value possible.
					// "maxRegsValue" : 1, // Default value
					"maxRegsValue" : 0.0,
					// Minimum constant value possible.
					// "minConstValue" : -1, // Default value
					"minConstValue" : -1.0,
					// Minimum register value possible.
					// "minRegsValue" : -1, // Default value
					"minRegsValue" : 0.0,
					// Probability of inserting a line in the Program.
					// "pAdd" : 0.5, // Default value
					"pAdd" : 0.9,
					// Probability of each constant to be mutated.
					// Mutation is to multiply by a random number between 0.5 and 2
					// There is also 0.1 probability of multiply by -1.
					// "pConstantMutation" : 0.5, // Default value
					"pConstantMutation" : 0.5,
					// Probability of deleting a line of the Program.
					// "pDelete" : 0.5, // Default value
					"pDelete" : 0.5,
					// Probability of altering a line of the Program.
					// "pMutate" : 1.0, // Default value
					"pMutate" : 1.0,
					// Probability of creating a new program.
					// "pNewProgram" : 0.0, // Default value
					"pNewProgram" : 0.0,
					// Probability of each init register value to be mutated.
					// Mutation is to multiply by a random number between 0.5 and 2
					// There is also 0.1 probability of multiply by -1.
					// "pRegsValueMutation" : 0.5, // Default value
					"pRegsValueMutation" : 0.0,
					// Probability of swapping two lines of the Program.
					// "pSwap" : 1.0, // Default value
					"pSwap" : 1.0
			},
			"tpg" :
			{
					// When a Program is mutated, makes sure its behavior is no longer the same.
					// "forceProgramBehaviorChangeOnMutation" : false, // Default value
					"forceProgramBehaviorChangeOnMutation" : false,
					//  Number of actions vertex at the initialisation of a TPGGraph
					// "initNbActions" : 10, // Default value
					"initNbActions" : 1000,
					// Number of root TPGTeams at the initialisation of a TPGGraph.
					// If 0, if will be init to the number of surviving roots
					// "nbInitRoots" : 0, // Default value
					"initNbRoots" : 0,
					// Maximum number of TPGEdge connected to each TPGTeam of the TPGGraph when
					// initialized.
					// "maxInitOutgoingEdges" : 3, // Default value
					"maxInitOutgoingEdges" : 3,
					// Maximum number of outgoing edge during TPGGraph mutations.
					// "maxOutgoingEdges" : 5, // Default value
					"maxOutgoingEdges" : 30,
					// Maximum Shared regidster value possible.
					// "maxSharedRegsValue" : 1, // Default value
					"maxSharedRegsValue" : 0.0,
					// Minimum Shared register value possible.
					// "minSharedRegsValue" : -1, // Default value
					"minSharedRegsValue" : 0.0,
					// Create multiple action program, instead of one outputting multiple action.
					// "multiActionProg" : false, // Default value
					"multiActionProg" : true,
					// Number of edge per action vertex at initialisation
					// "nbActionEdgeInit" : 1, // Default value
					"nbActionEdgeInit" : 1,
					// Number of root TPGTeams to maintain when populating the TPGGraph
					// "nbRoots" : 100, // Default value
					"nbRoots" : 1000,
					// Probability of adding an outgoing Action Edge to a Action.
					// "pActionEdgeAddition" : 0.7, // Default value
					"pActionEdgeAddition" : 0.2,
					// Probability of deleting an outgoing ActionEdge of a Action.
					// "pActionEdgeDeletion" : 0.7, // Default value
					"pActionEdgeDeletion" : 0.1,
					//  Probablity of changing the action edge by any other action edge in the graph
					// "pChangeActionClass" : 0.1, // Default value
					"pChangeActionClass" : 0.2,
					// Probability of adding an outgoing Edge to a Team.
					// "pEdgeAddition" : 0.7, // Default value
					"pEdgeAddition" : 0.7,
					// Probability of deleting an outgoing Edge of a Team.
					// "pEdgeDeletion" : 0.7, // Default value
					"pEdgeDeletion" : 0.7,
					// Probability of changing the destination of an Edge.
					// "pEdgeDestinationChange" : 0.1, // Default value
					"pEdgeDestinationChange" : 0.2,
					// Probability of the new destination of an Edge to be an Action.
					// "pEdgeDestinationIsAction" : 0.5, // Default value
					"pEdgeDestinationIsAction" : 0.99,
					//  Probablity of mutation the program on the action edge
					// "pMutateActionProgram" : 0.1, // Default value
					"pMutateActionProgram" : 0.5,
					// Probability of mutating the Program of an outgoing Edge.
					// "pProgramMutation" : 0.2, // Default value
					"pProgramMutation" : 0.5,
					// Probability of each init shared register value to be mutated.
					// Mutation is to multiply by a random number between 0.5 and 2
					// There is also 0.1 probability of multiply by -1.
					// "pSharedRegsValueMutation" : 0.5, // Default value
					"pSharedRegsValueMutation" : 0.0,
					//  Probablity of swapping two action edge within the same action vertex
					// "pSwapActionProgram" : 0.1, // Default value
					"pSwapActionProgram" : 0.1,
					//  Probablity of swapping two context edge within the same team vertex
					// "pSwapEdge" : 0.1, // Default value
					"pSwapEdge" : 0.0,
					// When an edge is mutate, the choice between action and context program is based on this
					// "probaContextOverActionProgram" : 0.5, // Default value
					"probaContextOverActionProgram" : 0.5,
					// Minimum proportion of action roots we have, and delete, at each generation
					// "proportionActionROots" : 0.0, // Default value
					"proportionActionRoots" : 1.0,
					// Minimum proportion of team roots we have, and delete, at each generation
					// "proportionTeamRoots" : 0.0, // Default value
					"proportionTeamRoots" : 0.0,
					//  Make preExistingAction during mutation only with action roots, or with all actions
					// "selectAllActions" : true, // Default value
					"selectAllActions" : true,
					// Create action program, instead of using context program to select actions.
					// "useActionProgram" : false, // Default value
					"useActionProgram" : true,
					// Create multiple action program, instead of one outputting multiple action in a single program.
					// "useMultiActionProgram" : false, // Default value
					"useMultiActionProgram" : false
			}
	},
	// Number of edges that can be activated during a team evaluation.
	// Even if more than one edge can be activated, only one team can be.
	// If set to 0, it will be set to one for single action cases and two for multi action cases.
	// "nbEdgesActivable" : 0, // Default value
	"nbEdgesActivable" : 0,
	// Number of generations of the training.
	// "nbGenerations" : 500, // Default value
	"nbGenerations" : 200,
	// [Only used in AdversarialLearningAgent.]
	// Number of times each job is evaluated in the learning process.
	// Each root may belong to several jobs, hence this parameter should be lower
	// than the nbIterationsPerPolicyEvaluation parameter.
	// "nbIterationsPerJob" : 1, // Default value
	"nbIterationsPerJob" : 1,
	// Number of evaluation of each root per generation.
	// "nbIterationsPerPolicyEvaluation" : 5, // Default value
	"nbIterationsPerPolicyEvaluation" : 3,
	// Number of evaluation of each root per generation.
	// "nbIterationsPerPolicyValidation" : 5, // Default value
	"nbIterationsPerPolicyValidation" : 20,
	// Number of Constant available in each Program.
	// "nbProgramConstant" : 0, // Default value
	"nbProgramConstant" : 0,
	// Number of registers for the Program execution.
	// "nbRegisters" : 8, // Default value
	"nbRegisters" : 8,
	// Number of registers shared among programs.
	// "nbSharedRegisters" : 0, // Default value
	"nbSharedRegisters" : 0,
	// [Only used in ParallelLearningAgent and child classes.]
	// Number of threads used for the training process.
	// When undefined in the json file, this parameter is automatically set to the
	// number of cores of the CPU.
	// /* "nbThreads" : 0,*/ // Commented by default
	"nbThreads" : 32,
	// Percentage of deleted (and regenerated) root TPGVertex at each generation.
	// "ratioDeletedRoots" : 0.5, // Default value
	"ratioDeletedRoots" : 0.5,
	// Value to indicate how many generation between each validation step
	// "stepValidation" : 1, // Default value
	"stepValidation" : 50,
	// Boolean to use MSE or only average of the nb of iterations per policy evaluation// "useMSE" : false, // Default value
	"useMSE" : false,
	// Boolean indicating if the registers are memory registers of no.
	// "useMemoryRegisters" : false, // Default value
	"useMemoryRegisters" : false
}