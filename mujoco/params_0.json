{
	// string that indicate the activation function used for continuous actions 
	// "activationFunction" : 'none', // Default value
	"activationFunction" : "tanh",
	// Number of recordings held in the Archive.
	// "archiveSize" : 50, // Default value
	"archiveSize" : 50,
	// Probability of archiving the result of each Program execution.
	// "archivingProbability" : 0.05, // Default value
	"archivingProbability" : 0.0005,
	// Boolean used to activate an evaluation of the surviving roots in validation
	// mode after the training at each generation.
	// "doValidation" : false, // Default value
	"doValidation" : false,
	// Maximum number of actions performed on the learning environment during the
	// each evaluation of a root.
	// "maxNbActionsPerEval" : 1000, // Default value
	"maxNbActionsPerEval" : 1000,
	// Maximum number of times a given root is evaluated.After this number is
	// reached, possibly after several generations, the score of the root will be
	// fixed, and no further evaluation will be done.
	// "maxNbEvaluationPerPolicy" : 1000, // Default value
	"maxNbEvaluationPerPolicy" : 20,
	"mutation" : 
	{
		"prog" : 
		{
			// Initial maximum number of Line within the Program of the TPGGraph.
			// "initMaxProgramSize" : 10, // Default value
			"initMaxProgramSize" : 100,
			// Initial minimum number of Line within the Program of the TPGGraph.
			// "initMinProgramSize" : 1, // Default value
			"initMinProgramSize" : 1,
			// Maximum constant value possible.
			// "maxConstValue" : 100, // Default value
			"maxConstValue" : 1.0,
			// Maximum number of Line within the Program of the TPG.
			// "maxProgramSize" : 96, // Default value
			"maxProgramSize" : 10000,
			// Minimum constant value possible.
			// "minConstValue" : -10, // Default value
			"minConstValue" : -1.0,
			// Probability of inserting a line in the Program.
			// "pAdd" : 0.5, // Default value
			"pAdd" : 0.0,
			// Probability of each constant to be mutated.
			// "pConstantMutation" : 0.5, // Default value
			"pConstantMutation" : 0.5,
			// Probability of deleting a line of the Program.
			// "pDelete" : 0.5, // Default value
			"pDelete" : 0.0,
			// Probability of altering a line of the Program.
			// "pMutate" : 1.0, // Default value
			"pMutate" : 1.0,
			// Probability of creating a new program.
			// "pNewProgram" : 0.0, // Default value
			"pNewProgram" : 0.0,
			// Probability of swapping two lines of the Program.
			// "pSwap" : 1.0, // Default value
			"pSwap" : 1.0
		},
		"tpg" : 
		{
			// When a Program is mutated, makes sure its behavior is no longer the same.
			// "forceProgramBehaviorChangeOnMutation" : false, // Default value
			"forceProgramBehaviorChangeOnMutation" : false,
			// Number of consecuitive generations with only crossover (in genLinked mode).
			// "genCross" : 5, // Default value
			"genCross" : 3,
			// Number of consecuitive generations with only mutations (in genLinked mode).
			// "genMut" : 5, // Default value
			"genMut" : 7,
			//  Number of actions vertex at the initialisation of a TPGGraph
			// "initNbActions" : 10, // Default value
			"initNbActions" : 1000,
			// Number of root TPGTeams at the initialisation of a TPGGraph.
			// If 0, if will be init to the number of surviving roots
			// "nbRoots" : 0, // Default value
			"initNbTeams" : 0,
			// Maximum number of TPGEdge connected to each TPGTeam of the TPGGraph when
			// initialized.
			// "maxInitOutgoingEdges" : 3, // Default value
			"maxInitOutgoingEdges" : 3,
			// Maximum number of outgoing edge during TPGGraph mutations.
			// "maxOutgoingEdges" : 5, // Default value
			"maxOutgoingEdges" : 30,
			// Mode of crossover, can be either classic, onlyOne or genLinked.
			// "modeCrossoverComment" : "classic", // Default value
			"modeCrossover" : "genLinked",
			// Number of edge per action vertex at initialisation
			// "nbActionEdgeInit" : 1, // Default value
			"nbActionEdgeInit" : 4,
			// Number of root TPGTeams to maintain when populating the TPGGraph
			// "nbRoots" : 100, // Default value
			"nbRoots" : 1000,
			// Probability of adding an outgoing Action Edge to a Action.
			// "pActionEdgeAddition" : 0.7, // Default value
			"pActionEdgeAddition" : 0.7,
			// Probability of deleting an outgoing ActionEdge of a Action.
			// "pActionEdgeDeletion" : 0.7, // Default value
			"pActionEdgeDeletion" : 0.7,
			//  Probablity of changing the action edge by any other action edge in the graph
			// "pChangeActionClass" : 0.1, // Default value
			"pChangeActionClass" : 0.2,
			// Probability of adding an outgoing Edge to a Team.
			// "pEdgeAddition" : 0.7, // Default value
			"pEdgeAddition" : 0.7,
			// Probability of deleting an outgoing Edge of a Team.
			// "pEdgeDeletion" : 0.7, // Default value
			"pEdgeDeletion" : 0.7,
			// Probability of changing the destination of an Edge.
			// "pEdgeDestinationChange" : 0.1, // Default value
			"pEdgeDestinationChange" : 0.2,
			// Probability of the new destination of an Edge to be an Action.
			// "pEdgeDestinationIsAction" : 0.5, // Default value
			"pEdgeDestinationIsAction" : 0.99,
			//  Probablity of mutation the program on the action edge
			// "pMutateActionProgram" : 0.1, // Default value
			"pMutateActionProgram" : 0.5,
			// Probability of mutating the Program of an outgoing Edge.
			// "pProgramMutation" : 0.2, // Default value
			"pProgramMutation" : 0.5,
			//  Probablity of swapping two action edge within the same action vertex
			// "pSwapActionProgram" : 0.1, // Default value
			"pSwapActionProgram" : 0.1,
			// When an edge is mutate, the choice between action and context program is based on this
			// "probaContextOverActionProgram" : 0.5, // Default value
			"probaContextOverActionProgram" : 0.1,
			// Proportion of new agents created with crossover instead of mutation.
			// "probaCrossAgents" : 0.0, // Default value
			"probaCrossAgents" : 0.0,
			// probability of new agents created with crossover instead of mutation (in onlyOne mode).
			// "probaCrossOverMut" : 0.0, // Default value
			"probaCrossOverMut" : 0.0,
			// Proportion of new programs created threw crossover.
			// "probaCrossPrograms" : 0.0, // Default value
			"probaCrossPrograms" : 0.5,
			// Type of program crossovers done.
			// "typeProgramCrossover" : "onePoint"
			"typeProgramCrossover" : "standard",
			// Create action program, instead of using context program to select continuous action(s).
			// "useActionProgram" : false, // Default value
			"useActionProgram" : true,
			// Create multiple action program, instead of one outputting multiple action in a single program.
			// "useMultiActionProgram" : false, // Default value
			"useMultiActionProgram" : true
		}
	},
	// Number of generations of the training.
	// "nbGenerations" : 500, // Default value
	"nbGenerations" : 30,
	// [Only used in AdversarialLearningAgent.]
	// Number of times each job is evaluated in the learning process.
	// Each root may belong to several jobs, hence this parameter should be lower
	// than the nbIterationsPerPolicyEvaluation parameter.
	// "nbIterationsPerJob" : 1, // Default value
	"nbIterationsPerJob" : 1,
	// Number of evaluation of each root per generation.
	// "nbIterationsPerPolicyEvaluation" : 5, // Default value
	"nbIterationsPerPolicyEvaluation" : 1,
	// Number of evaluation of each root per generation.
	// "nbIterationsPerPolicyValidation" : 5, // Default value
	"nbIterationsPerPolicyValidation" : 20,
	// Number of Constant available in each Program.
	// "nbProgramConstant" : 0, // Default value
	"nbProgramConstant" : 0,
	// Number of registers for the Program execution.
	// "nbRegisters" : 8, // Default value
	"nbRegisters" : 8,
	// [Only used in ParallelLearningAgent and child classes.]
	// Number of threads used for the training process.
	// When undefined in the json file, this parameter is automatically set to the
	// number of cores of the CPU.
	// /* "nbThreads" : 0,*/ // Commented by default
	"nbThreads" : 1,
	// Percentage of deleted (and regenerated) root TPGVertex at each generation.
	// "ratioDeletedRoots" : 0.5, // Default value
	"ratioDeletedRoots" : 0.95,
	// Size of tournament if tournament selection is used.
	// "sizeTournament" : 0.5, // Default value
	"sizeTournament" : 3,
	// Value to indicate how many generation between each validation step
	// "stepValidation" : 1, // Default value
	"stepValidation" : 50,
	// If tournament of simple selection is used.
	// "useTournamentSelection" : false, // Default value
	"useTournamentSelection" : true
}